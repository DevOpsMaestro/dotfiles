
# NOTE: must exit tmux server instance before changes here can take effect.
# https://gist.github.com/MohamedAlaa/2961058

# remap prefix to Control + space
set -g prefix C-space
unbind C-b
bind C-space send-prefix

bind k resize-pane -U 10
bind j resize-pane -D 10

# allow j,k movement in, for example, tmux windows list/select
setw -g mode-keys vi

# center the window list
set -g status-justify centre

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# http://stackoverflow.com/questions/25477279/create-new-window-and-set-name
bind-key c command-prompt -p "window name:" "new-window; rename-window '%%'"

# https://superuser.com/questions/231002/how-can-i-search-within-the-output-buffer-of-a-tmux-shell
# allows (prefix) + /
# and start typing the search term, which will search up (latest lines first).
bind-key / copy-mode \; send-key ?

# https://unix.stackexchange.com/questions/151329/reorder-tmux-windows
# https://superuser.com/questions/352117/binding-a-tmux-key-to-multiple-commands
# must backslash escape the cmd separator (;)
# bind-key -n S-Left swap-window -t -1 \; select-window -t -1
# bind-key -n S-Right swap-window -t +1 \; select-window -t +1
bind < swap-window -t -1 \; select-window -t -1
bind > swap-window -t +1 \; select-window -t +1

# https://stackoverflow.com/questions/13058578/how-to-prevent-tmux-from-filling-up-the-global-path-variable-with-duplicated-pat
# By default tmux starts new shells as login shells. to prevent tmux from doing that:
# disabled this b/c it caused ~/.zshenv to exec 2x.
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/issues/23#issuecomment-31034789
# set -g default-command /usr/bin/zsh

# https://stackoverflow.com/questions/18760281/how-to-increase-scrollback-buffer-size-in-tmux#18777877
# the default value is 2000
set-option -g history-limit 4000

# https://www.codementor.io/linux/tutorial/configure-linux-toolset-zsh-tmux-vim

# Set mouse support to on.
# For resizing, scrolling, and pane selection with the mouse:
set -g mouse on
# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft='#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down

# command delay? We don't want that, make it short
# https://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior/25638#25638
set -sg escape-time 0

# Set the numbering of windows to go from 1 instead of 0
set-option -g base-index 1
setw -g pane-base-index 1

# select previous pane
bind -T prefix m select-pane -t :.-

## Allow us to reload our Tmux configuration while using tmux
bind r source-file ${HOME}/.tmux.conf \; display-message "Config reloaded!"
#
## Getting interesting now, we use the vertical and horizontal
## symbols to split the screen
bind | split-window -h
bind - split-window -v

#
# Call sign, "Uncle Fester" suggested this option for syncing the panes
# He likes to open 8 panes with each one ssh'ed to a different node
# then he will sync them, and from one pane
# controlling all 8 target servers. e.g. for patching.
# yes, you could use pssh to mimic this, but a cool option inside of tmux to accomplish a similar method
# Cool enough that I am taking my time to learn this approach.
#
# My helper command to toggle synchronize-panes with a happy message
# F3: force ON
bind-key -n F3 set-window-option synchronize-panes on \; display-message "#[fg=lightgreen,bold,bg=black]Synchronize-panes is now ON"
# F4: force OFF
bind-key -n F4 set-window-option synchronize-panes off \; display-message "#[fg=yellow,bold,bg=black]Synchronize-panes is now OFF"
#
# Prefix + F3: ON
bind F3 if -F '#{window_synchronize_panes}' 'set-window-option synchronize-panes off; display-message "#[fg=lightgreen,bold,bg=black]Synchronize-panes is now OFF"' 'set-window-option synchronize-panes on; display-message "#[fg=lightgreen,bold,bg=black]Synchronize-panes is now ON"'
# Prefix + F4: OFF
bind F4 set-window-option synchronize-panes off \; display-message "#[fg=yellow,bold,bg=black]Synchronize-panes is now OFF"

# todo: http://www.drbunsen.org/the-text-triumvirate/

#
# http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# follows...

# don't rename windows automatically
# By default tmux will update the window title automatically depending on the
# last executed command within that window.
# set-option -g allow-rename off

# reload config file
# not working
# bind -T prefix r source-file ~/.tmux.conf \; \
# display-message "source-file ~/.tmux.conf done"

# reload config file
# not working
# bind -T prefix r source-file ~/.tmux.conf \; \
# display-message "source-file ~/.tmux.conf done"

######################
### DESIGN CHANGES ###
######################

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "screen-256color"

## Status bar design
set -g status-justify left
set -g status-interval 2
set -g status-position bottom

# set -g status-right '#[fg=colour233,bg=colour241,bold] %d %b #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right '#[fg=colour233,bg=colour241,bold] %a %d %b #[fg=colour233,bg=colour245,bold] %H:%M:%S #[fg=colour233,bg=colour241] #H '

set -g status-right-length 50

set -g status-left ''
set -g status-style "bg=colour235,fg=colour136"
# setw -g window-status-format '#[bg=colour243,fg=colour16] #I #[bg=colour241,fg=colour111] #W #F'
# setw -g window-status-current-format '#[bg=colour15,fg=colour235,bold] #I #[bg=colour238,fg=colour123,bold] #W #F'
setw -g window-status-format '#[bg=colour235,fg=colour244] #I:#W '
setw -g window-status-current-format '#[bg=colour28,fg=colour231,bold] #I:#W '

# By default Tmux environment is saved to a file in ~/.tmux/resurrect dir.
# set -g @resurrect-dir '${HOME}/.some/path'
#
# https://github.com/tmux-plugins/tpm
# https://github.com/tmux-plugins # for list of plugins
# I know it Stinks!
# but if you don't have tmux's TPM already installed, you will need to run the
# following `git clone` command to install the other plugins:
# git clone https://github.com/tmux-plugins/tpm ${HOME}/.tmux/plugins/tpm
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-copycat'

# For autosaving sessions:
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# To visualize when you are in prefix mode:
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# https://github.com/tmux-plugins/tmux-resurrect?tab=readme-ov-file#installation-with-tmux-plugin-manager-recommended
# 1) Add plugin to the list of TPM plugins in .tmux.conf:
# 2) Hit prefix + I to fetch the plugin and source it. You should now be able to use the plugin.
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'

set -g @plugin 'catppuccin/tmux#v2.1.3'
set -g @catppuccin_flavor 'macchiato'

# https://github.com/sainnhe/tmux-fzf
# The following allows me to perform fuzzy searches:
set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY='C-f'
TMUX_FZF_OPTIONS='-p -w 62% -h 38% -m'
TMUX_FZF_ORDER='session|window|pane|command|keybinding'
TMUX_FZF_PANE_FORMAT='[#{window_name}] #{pane_current_command} [#{pane_width}x#{pane_height}] [history #{history_size}/#{history_limit}, #{history_bytes} bytes] #{?pane_active,[active],[inactive]}'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
